GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('primitive_humidity_collector')
        .category('haruk0')
        .setMaxIOSize(2, 6, 0, 2)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.COOLING)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('primitive_humidity_collector', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('primitive_humidity_collector')
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('F###F', 'F###F', 'CCCCC', 'F###F', 'F###F', 'CCCCC')
            .aisle('#####', '#####', 'CCCCC', '#HHH#', '#HHH#', 'CCCCC')
            .aisle('#####', '#####', 'CCCCC', '#HZH#', '#HZH#', 'CCCCC')
            .aisle('#####', '#####', 'CCCCC', '#HKH#', '#HHH#', 'CCCCC')
            .aisle('F###F', 'F###F', 'CCCCC', 'F###F', 'F###F', 'CCCCC')
        .where('#', Predicates.any())
        .where('F', Predicates.blocks('gtceu:treated_wood_frame'))
        .where('C', Predicates.blocks('gtceu:treated_wood_planks'))
        .where('Z', Predicates.blocks('kubejs:primitive_humidity_casing'))
        .where('H', Predicates.blocks('gtceu:industrial_steam_casing')
            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
        .where('K', Predicates.controller(Predicates.blocks(definition.get())))
        .build())
.workableCasingModel('gtceu:block/casings/gcym/industrial_steam_casing', 'gtceu:block/machines/air_scrubber')
})