//const GTRecipeModifiers = Java.loadClass('com.gregtechceu.gtceu.common.data.GTRecipeModifiers'); Ãštil para overclock

GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('high_pressure_atom_splitter')
        .category('haruk0')
        .setEUIO('out')
        .setMaxIOSize(3, 2, 3, 2)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('high_pressure_atom_splitter', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('high_pressure_atom_splitter')
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('OOOOOMMMMMOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO','OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO')
            .aisle('OOOMMDDDDDMMOOO', 'OOOOOGDDDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOGDDDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOMMMMMOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO','OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO')
            .aisle('OOMDDDDDDDDDMOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOOGOOOOOGOOOO', 'OOOODOOOOODOOOO', 'OOOOMGDDDGMOOOO', 'OOOOMGDGDGMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO','OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMMMMMMMOOOO')
            .aisle('OMDDDDDDDDDDDMO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODGOOOOOGDOOO', 'OOODGOOOOOGDOOO', 'OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO','OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO', 'OOOODDDDDDDOOOO', 'OOOMOOOMOOOMOOO')
            .aisle('OMDDDDDDDDDDDMO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OODOOOOOOOOODOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO','OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMDDDDDDDDDMOO', 'OOMOMOOMOOMOMOO')
            .aisle('MDDDDDDDDDDDDDM', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OMGOOOOOOOOOGMO', 'OOGOOOOOOOOOGOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO','OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOODDDDDDDDDOOO', 'OOMOOMOMOMOOMOO')
            .aisle('MDDDDDDDDDDDDDM', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'OMDOOOOOOOOODMO', 'OODOOOOOOOOODOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO','OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODDDDDDDDDOOO', 'OOMOOOMGMOOOMOO')
            .aisle('MDDDDDDDDDDDDDM', 'ODOOOOOOOOOOODO', 'OGOOOOOOOOOOOGO', 'ODOOOOOOOOOOODO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OMGOOOOOOOOOGMO', 'OOGOOOOOOOOOGOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO','OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOODDDDDDDDDOOO', 'OOMMMMGGGMMMMOO')
            .aisle('MDDDDDDDDDDDDDM', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'ODOOOOOOOOOOODO', 'OMDOOOOOOOOODMO', 'OODOOOOOOOOODOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO','OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODDDDDDDDDOOO', 'OOMOOOMGMOOOMOO')
            .aisle('MDDDDDDDDDDDDDM', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OGOOOOOOOOOOOGO', 'OMGOOOOOOOOOGMO', 'OOGOOOOOOOOOGOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO','OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOOGOOOOOOOGOOO', 'OOODDDDDDDDDOOO', 'OOMOOMOMOMOOMOO')
            .aisle('OMDDDDDDDDDDDMO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OODOOOOOOOOODOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO','OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMGOOOOOOOGMOO', 'OOMDDDDDDDDDMOO', 'OOMOMOOMOOMOMOO')
            .aisle('OMDDDDDDDDDDDMO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOGOOOOOOOOOGOO', 'OOODOOOOOOODOOO', 'OOODOOOOOOODOOO', 'OOODGOOOOOGDOOO', 'OOODGOOOOOGDOOO', 'OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO','OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO', 'OOODGGDGDGGDOOO', 'OOOODDDDDDDOOOO', 'OOOMOOOMOOOMOOO')
            .aisle('OOMDDDDDDDDDMOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOGGOOOOOGGOOO', 'OOOOGOOOOOGOOOO', 'OOOODOOOOODOOOO', 'OOOOMGDDDGMOOOO', 'OOOOMGDGDGMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO','OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMOOOOOMOOOO', 'OOOOMMMMMMMOOOO')
            .aisle('OOOMMDDDDDMMOOO', 'OOOOOGDDDGOOOOO', 'OOOOOGDKDGOOOOO', 'OOOOOGDDDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOGDGDGOOOOO', 'OOOOOMMMMMOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO','OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO')
            .aisle('OOOOOMMMMMOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO','OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO', 'OOOOOOOOOOOOOOO')
            .where('K', Predicates.controller(Predicates.blocks(definition.get())))
            .where('M', Predicates.blocks('gtceu:hsse_frame'))
            .where('D', Predicates.blocks('gtceu:high_temperature_smelting_casing')
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
            .where('G', Predicates.blocks('gtceu:sturdy_machine_casing').setMinGlobalLimited(270)
                .or(Predicates.autoAbilities(definition.getRecipeTypes())))
            .where('O', Predicates.any())
            .build())
       .workableCasingModel('gtceu:block/casings/solid/machine_casing_sturdy_hsse', 'gtceu:block/multiblock/fusion_reactor')

})    