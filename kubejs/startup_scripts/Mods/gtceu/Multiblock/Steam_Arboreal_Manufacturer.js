const $SteamArboreal = Java.loadClass('com.gregtechceu.gtceu.common.machine.multiblock.steam.SteamParallelMultiblockMachine');

GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('steam_arboreal_manufacturer')
        .category('haruk0')
        .setMaxIOSize(4, 6, 3, 3)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.MINER)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('steam_arboreal_manufacturer', 'multiblock')
        .machine((holder) => new $SteamArboreal(holder, 2))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('steam_arboreal_manufacturer')
        .recipeModifier((machine, recipe) => $SteamArboreal.recipeModifier(machine, recipe), true)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle("CCCCC", "VCCCV", "VEEEV", "VEEEV", "VEEEV", "CCCCC")
            .aisle("CFGFC", "C###C", "E###E", "E#T#E", "E###E", "CEEEC")
            .aisle("CGFGC", "C#R#C", "E#R#E", "ETRTE", "E#T#E", "CEEEC")
            .aisle("CFGFC", "C###C", "E###E", "E#T#E", "E###E", "CEEEC")
            .aisle("CCHCC", "VEEEV", "VEEEV", "VEEEV", "VEEEV", "CCCCC")
            .where('#', Predicates.any())
            .where('V', Predicates.blocks('gtceu:invar_frame'))
            .where('C', Predicates.blocks('gtceu:steam_machine_casing')
                .or(Predicates.abilities(PartAbility.STEAM).setMaxGlobalLimited(1))
                .or(Predicates.abilities(PartAbility.STEAM_EXPORT_ITEMS))
                .or(Predicates.abilities(PartAbility.STEAM_IMPORT_ITEMS).setMaxGlobalLimited(1))
                .or(Predicates.autoAbilities(definition.getRecipeTypes())))
            .where("E", Predicates.blocks("create:framed_glass"))
            .where("R", Predicates.blocks("minecraft:oak_log")
                .or(Predicates.blocks('minecraft:spruce_log')))
            .where("T", Predicates.blocks("minecraft:oak_leaves")
                .or(Predicates.blocks('minecraft:spruce_leaves')))
            .where("F", Predicates.blocks("minecraft:packed_mud"))
            .where("G", Predicates.blocks("minecraft:moss_block"))
            .where('H', Predicates.controller(Predicates.blocks(definition.get())))
            .build())
    .workableCasingModel("gtceu:block/casings/solid/machine_casing_bronze_plated_bricks", "gtceu:block/machines/compressor")
  }); 