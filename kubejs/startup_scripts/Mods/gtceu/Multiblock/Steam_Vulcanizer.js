const $SteamVulcanizer = Java.loadClass('com.gregtechceu.gtceu.common.machine.multiblock.steam.SteamParallelMultiblockMachine')

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('large_steam_vulcanizer', 'multiblock')
        .machine((holder) => new $SteamVulcanizer(holder, 2))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('steam_vulcanizer')
        .recipeModifier((machine, recipe) => $SteamVulcanizer.recipeModifier(machine, recipe), true)
        .pattern(definition => FactoryBlockPattern.start()
        .aisle("DDDDD", "CCCCC", "CCCCC")
        .aisle("DDDDD", "C###C", "CCCCC")
        .aisle("DDDDD", "CCHCC", "CCCCC")
   .where('#', Predicates.any())
   .where('C', Predicates.blocks('gtceu:steam_machine_casing')
        .or(Predicates.abilities(PartAbility.STEAM_IMPORT_ITEMS).setMaxGlobalLimited(1))
        .or(Predicates.abilities(PartAbility.STEAM).setMaxGlobalLimited(1))
        .or(Predicates.abilities(PartAbility.STEAM_EXPORT_ITEMS).setMaxGlobalLimited(1)))
   .where("D", Predicates.blocks("gtceu:bronze_firebox_casing"))
   .where('H', Predicates.controller(Predicates.blocks(definition.get())))
        .build())
    .workableCasingModel("gtceu:block/casings/solid/machine_casing_bronze_plated_bricks", "gtceu:block/machines/fluid_heater")
  })