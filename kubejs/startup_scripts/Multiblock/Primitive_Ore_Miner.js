GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('primitive_ore_miner')
        .category('haruk0')
        .setMaxIOSize(3, 6, 2, 3)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.MINER)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('primitive_ore_miner', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('primitive_ore_miner')
        .pattern(definition => FactoryBlockPattern.start()
            .aisle("V###V", "V###V", "CCCCC", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####")
            .aisle("#####", "#####", "CCCCC", "#DED#", "##E##", "##E##", "##E##", "#####", "#####", "#####", "#####")
            .aisle("#####", "#####", "CCCCC", "#ECE#", "#ECE#", "#ECE#", "#ECE#", "##E##", "##E##", "##E##", "##E##")
            .aisle("#####", "#####", "CCCCC", "#DED#", "##E##", "##E##", "##E##", "#####", "#####", "#####", "#####")
            .aisle("V###V", "V###V", "CCHCC", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####")
            .where('#', Predicates.any())
            .where('D', Predicates.blocks('gtceu:bronze_firebox_casing'))
            .where('V', Predicates.blocks('gtceu:invar_frame'))
            .where('C', Predicates.blocks('gtceu:steam_machine_casing')
                .or(Predicates.abilities(PartAbility.STEAM_EXPORT_ITEMS).setMaxGlobalLimited(3))
                .or(Predicates.abilities(PartAbility.STEAM_IMPORT_ITEMS).setMaxGlobalLimited(2))
                .or(Predicates.autoAbilities(definition.getRecipeTypes())))
            .where("E", Predicates.blocks("gtceu:bronze_frame"))
            .where('H', Predicates.controller(Predicates.blocks(definition.get())))
            .build())
    .workableCasingRenderer("gtceu:block/casings/solid/machine_casing_bronze_plated_bricks", "gtceu:block/multiblock/bedrock_ore_miner", true)
  })